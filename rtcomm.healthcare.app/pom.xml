<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.wasdev.wlp.sample</groupId>
        <artifactId>sample.rtcomm.healthcare</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>rtcomm.healthcare.app</artifactId>
    <packaging>war</packaging>
    <name>WAS Liberty Sample - Rtcomm Healthcare Sample Application</name>
    <url>https://wasdev.github.io</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://raw.githubusercontent.com/WASdev/sample.rtcomm.healthcare/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
      <connection>scm:git:git@github.com:WASdev/sample.rtcomm.healthcare.git</connection>
        <developerConnection>scm:git@github.com:WASdev/sample.rtcomm.healthcare.git</developerConnection>
        <url>git@github.com:WASdev/sample.rtcomm.healthcare.git</url>
    </scm>
    <properties>
        <wlpInstallProps>${project.parent.basedir}/wlp-install.properties</wlpInstallProps>
        <devtestProps>${project.parent.basedir}/devtest.properties</devtestProps>

        <wlpServerName>RtcommHealthcareServer</wlpServerName>
        <wlpUserDir>${project.parent.basedir}/rtcomm.healthcare.wlpcfg</wlpUserDir>
        <wlpServerDir>${wlpUserDir}/servers/${wlpServerName}</wlpServerDir>
        <wlpOutputDir>${project.build.directory}/wlp.output</wlpOutputDir>

        <skipPackage>true</skipPackage>

        <!-- allow tests to be skipped if a wlp dir can't be found without failing the build,
             use the requireAllTests profile to override -->
        <skipEnforceTests>true</skipEnforceTests>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>3.1.1</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>1.0.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
      <dependency>
        <groupId>com.ibm.tools.target</groupId>
        <artifactId>was-liberty</artifactId>
        <version>LATEST</version>
        <type>pom</type>
        <scope>provided</scope>
  </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.wasdev.wlp.sample</groupId>
            <artifactId>rtcomm.healthcare.wlpcfg</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>0.0.23</version>

           <configuration>
             <workingDirectory>src/main/webapp</workingDirectory>
           </configuration>
           <executions>

             <execution>
    <!-- optional: you don't really need execution ids,
    but it looks nice in your build log. -->
    <id>install node and npm</id>
    <goals>
        <goal>install-node-and-npm</goal>
    </goals>
    <!-- optional: default phase is "generate-resources" -->
    <phase>generate-resources</phase>
    <configuration>
      <nodeVersion>v0.12.2</nodeVersion>
                           <npmVersion>2.7.6</npmVersion>

        <!-- optional: where to install node and npm. Defaults to the working directory -->
        <!-- <installDirectory>target</installDirectory> -->
    </configuration>
</execution>
<execution>
                      <id>npm install</id>
                      <goals>
                          <goal>npm</goal>
                      </goals>
                      <!-- Optional configuration which provides for running any npm command -->
                      <configuration>
                          <arguments>install shortid bower grunt-cli grunt-string-replace</arguments>
                      </configuration>
                  </execution>

             <execution>
               <id>bower install</id>
               <goals>
                 <goal>bower</goal>
               </goals>

             </execution>

           <execution>
    <id>grunt build</id>
    <goals>
        <goal>grunt</goal>
    </goals>

    <!-- optional: the default phase is "generate-resources" -->
    <phase>generate-resources</phase>

    <configuration>
        <!-- optional: if not specified, it will run Grunt's default
        task (and you can remove this whole <configuration> section.) -->
        <arguments>string-replace</arguments>
    </configuration>
</execution>
</executions>

         </plugin>
            <plugin>

                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- Read file(s) containing development and test properties -->
            <plugin>
        	<groupId>org.codehaus.mojo</groupId>
        	<artifactId>properties-maven-plugin</artifactId>
        	<version>1.0-alpha-2</version>
        	<executions>
          	    <execution>
            		<phase>initialize</phase>
            		<goals>
              		    <goal>read-project-properties</goal>
            		</goals>
            		<configuration>
                            <files>
                                <file>${wlpInstallProps}</file>
                                <file>${devtestProps}</file>
                            </files>
           		</configuration>
          	    </execution>
        	</executions>
	    </plugin>
            <!-- Copy war to wlpcfg for both later packaging and test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${wlpServerDir}/apps</outputDirectory>
                            <silent>true</silent>
                            <stripVersion>true</stripVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>net.wasdev.wlp.sample</groupId>
                                    <artifactId>sample.rtcomm.healthcare</artifactId>
                                    <version>1.0-SNAPSHOT</version>
                                    <type>war</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Enable liberty-maven plugin -->
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <configuration>
                    <serverName>${wlpServerName}</serverName>
                    <installDirectory>${wlp.install.dir}</installDirectory>
                    <userDirectory>${wlpUserDir}</userDirectory>
                    <outputDirectory>${wlpOutputDir}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>package-server</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package-server</goal>
                        </goals>
                        <configuration>
                            <skip>${wlp.bad.install}</skip>
                            <packageFile>${project.build.directory}/${wlpServerName}.zip</packageFile>
                            <include>usr</include>
                        </configuration>
                    </execution>
                    <!-- <execution>
                        <id>start-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start-server</goal>
                        </goals>
                        <configuration>
                            <skip>${wlp.bad.install}</skip>
                        </configuration>
                    </execution>
                    <execution>
      <id>stop-server</id>
      <phase>post-integration-test</phase>

      <goals>
          <goal>stop-server</goal>
      </goals>

  </execution> -->
                </executions>
            </plugin>
            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <!-- <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/fvt/**</include>
                            </includes>
                            <excludes>
                                <exclude>**/unit/**</exclude>
                            </excludes>
                            <systemPropertyVariables>
                                <liberty.test.port>${libertyPort}</liberty.test.port>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions> -->
                <configuration>
                    <skip>${wlp.bad.install}</skip>
                    <summaryFile>${project.build.directory}/test-reports/fvt/failsafe-summary.xml</summaryFile>
                    <reportsDirectory>${project.build.directory}/test-reports/fvt</reportsDirectory>
                </configuration>
            </plugin>
            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <!-- <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <includes>
                                <include>**/unit/**</include>
                            </includes>
                            <excludes>
                                <exclude>**/fvt/**</exclude>
                            </excludes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions> -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${skipEnforceTests}</skip>
                            <rules>
                                <requireProperty>
                                    <property>wlp.bad.install</property>
                                    <message>Must run all tests. Tests may be skipped because of bad WAS Liberty install at ${wlp.install.dir}</message>
                                    <regex>false</regex>
                                    <regexMessage>wlp.bad.install=${wlp.bad.install} -- it should be false</regexMessage>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.6.1</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>



        </executions>
      </plugin>
        </plugins>
    </build>

    <!-- <profiles>
        <profile>
            <id>requireAllTests</id>
            <properties>
                <skipEnforceTests>false</skipEnforceTests>
            </properties>
        </profile>
    </profiles> -->

</project>
